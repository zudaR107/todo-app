name: Release & Deploy

on:
  push:
    tags: ["v*"]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR (push)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version
        id: vars
        run: |
          echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          echo "TAG_LATEST=latest" >> $GITHUB_OUTPUT

      - name: Build & push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ vars.IMAGE_BACKEND }}:${{ steps.vars.outputs.TAG }}
            ${{ vars.IMAGE_BACKEND }}:${{ steps.vars.outputs.TAG_LATEST }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Collect known_hosts for host
        id: kh
        shell: bash
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          set -euo pipefail
          KH="$(ssh-keyscan -T 10 -p 22 "$SSH_HOST" 2>/dev/null)"
          [ -n "$KH" ] || { echo "ssh-keyscan empty"; exit 1; }
          { echo "KNOWN_HOSTS<<EOF"; echo "$KH"; echo "EOF"; } >> "$GITHUB_OUTPUT"

      - name: Setup CI SSH key & known_hosts
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ steps.kh.outputs.KNOWN_HOSTS }}
          if_key_exists: replace

      - name: Deploy over SSH (with GHCR login env)
        shell: bash
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
          GHCR_USERNAME: ${{ vars.GHCR_USERNAME }}
        run: |
          set -euo pipefail
          ssh -o BatchMode=yes -o StrictHostKeyChecking=yes "${SSH_USER}@${SSH_HOST}" <<'EOF'
            export GHCR_PAT='"${GHCR_PAT}"'
            export GITHUB_USER='"${GHCR_USERNAME}"'
            true
